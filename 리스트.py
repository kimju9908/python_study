# 리스트 연속적으로 저장되는 형태의 자료형(0개 이상의 원소가 저장가능)# 뮤터블 객체(읽고 쓰기가 가능)
# 같은 자료형일 필요 x , [](대괄호)로 표시

# 파이썬은 기본적으로 배열이 없는 언어입니다. 하지만 배열이 필요한 경우가 있다.
# 1. 고정된 크기의 데이터를 다루어야 할때
# 2. 수치 연산이 필요한 경우
# 3. 다차원 배열이 필요한 경우
# 4. 속도가 중요한 경우 # Numpy 사용
"""------------------------------------------------------------------------------------------------"""
# 리스트
# a =[] , a= [1,2,4]
# mixed = [1, ' apple ', True , 3.14] # 모두가 같은 자료형일 필요 x

# 변수가 갯수가 정해져 있는 경우
# a,b,c, = map(int, input().split())

# 변수의 갯수가 정해져 있지 않은 경우
# a= list(map(int,input().split()))

# print(a[1:3]) # 리스트 슬라이싱
# print(len(a)) # 리스트 길이 반환 # (a.__len()__))

# 리스트 요소 선택하기 (인덱싱)
# 리스트 맨 처음은 0 마지막은 n#1 또는 #1(역순)
# print(a[1][0]) # apple에 a반환(apple 의 경우 문자열로된 리스트이기 때문)
# print(a[0])
# print(a[-1]) # 역순으로 탐색
# print(a[1]+a[4])# 요소와 요소의 덧셈
# print(a[:4])# 슬라이싱
# 문자열을 포함할 때

# n = ["korea", "seoul", "inchun"]
# print(n[0][1])

# 리스트 연산자
# 연결(+), 반복 (*), len()
# a = [1,2,3]
# b = [4,5,6]

# print(a*3)
# print(len(a))
# print(a + b)
"""------------------------------------------------------------------------------------------------"""
# 리스트 제거 하기
# a=[0,2,4,6,2,5,23,2,"lsa","dsad","sadasda"]
# pop : 인덱스를 쓰지 않으면 마지막 인덱스를 반환하고 삭제하는 함수,
# 인덱스가 있으면 인덱스 위치의 데이터를 삭제하고 인덱스 범위를 벗어나면 error를 출력 (합니다.
# 리스트명.pop(인덱스))
# print(a.pop(3))

# remove : 동일한 값이 여러개 있는 경우 낮은 인덱스의 값 제거 리스트명.remove(값)
# print(a.remove("dsad"))

# del 리스트명[인덱스]로 해당 값을 제거 할 수 있습니다.
# del a[3]
# print(a)

# 중복제거(리스트내에 중복된 값을 제거하는 방법)
# a= ['A', 'B', 'C', 'D', 'B', 'D', 'E']
# b = []
# for v in a:
#     if v not in b:
#         b.append(v)
# print(b)
"""------------------------------------------------------------------------------------------------"""
#연습문제
#무작위 수를 입력 받아서 홀수 짝수로 리스트에 나누어 담아 출력하는 문제
# import random
# c=random.randint()
# a=[]
# b=[]
# for i in range(c):
#     d = random.randint()
#     if d%2==0:
#         a.append(d)
#     else:
#         b.append(d)
# print(a)
# print(b)

# 람다를 사용한 방법
# number = list(map(int,input("입력:").split()))
# number1 = list(filter(lambda  x:x%2==1,number))
# number2 = list(filter(lambda  x:x%2==0,number))
# print(number1)
# print(number2)

# 문제
#햄버거 가격 3개, 음료 가격 2개 입력 받음
#출력 :세트메뉴 가격 =  햄버거 3개중 제일 싼거 + 음료 2개중 싼거 -50
#입력 : 1000 1500 3000 1200 750
#세트 : 1700원
# c,b= map(int,input("""====햄버거====
# 1. 불고기버거  2.새우버거 3.대리버거 4.치킨 버거
# ====음료=====
# 5.커피 6.콜라 7.사이다 """).split())
# h=[2000,3000,4000,5000,6000]
# j=[1000,1200,1300]
# d = h[c-1]+j[b-1]-50
# print(f"세트가격은 {d}입니다")
# h=[2000,3000,4000,5000,6000]
# j=[1000,1200,1300]
# a=[]
# b=[]
# c= list(map(int,input("""====햄버거====
# 1. 불고기버거  2.새우버거 3.대리버거 4.치킨 버거
# ====음료=====
# 5.커피 6.콜라 7.사이다 """).split()))
# for i in range(4,len(c)+3):
#     if c[i-4] <=4 :
#         a.append(h[c[i-4]])
#     else:
#         b.append(j[c[i-8]])
# z=min(a)+min(b)-50
# print(z)

# 연습문제
# 영식(Y) 요금제 : 30초마다 10원
# 민식(M) 요금제 : 60초 마다 15원
# 3<= 통화 횟수
#40 40 40 <= 각 통화당 통화 시간
# 더 싼 요금제와 통화 요금
# 두개의 요금제의 크기가 같으면 Y M 50


# n = int(input("통화 횟수를 입력하세요"))
# t = list(map(int, input("통화 시간을 입력하세요").split()))
# y = m = 0
# for i in range(n):
#     y += (t[i] // 30) * 10 + 10
#     m += (t[i] // 60) * 15 + 15
# if y > m:
#     print("M", m)
# elif y < m:
#     print("Y", y)
# else:
#     print("Y M", y)




